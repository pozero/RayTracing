#version 460 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (rgba32f, binding = 0) uniform image2D img_output;

uniform vec3 upper_left_pixel;
uniform vec3 pixel_delta_u;
uniform vec3 pixel_delta_v;
uniform vec3 camera_position;

void main() {
    ivec2 tex_coord = ivec2(gl_GlobalInvocationID.xy);
    vec3 pixel = upper_left_pixel + 
                 tex_coord.x * pixel_delta_u + 
                 (gl_NumWorkGroups.y - tex_coord.y) * pixel_delta_v;
    vec3 ray_direction = pixel - camera_position;

    vec3 unit_ray_direction = normalize(ray_direction);
    float a = 0.5 * (unit_ray_direction.y + 1.0);
    vec4 value = (1.0 - a) * vec4(1.0, 1.0, 1.0, 1.0) + a * vec4(0.5, 0.7, 1.0, 1.0);
    imageStore(img_output, tex_coord, value);
}
